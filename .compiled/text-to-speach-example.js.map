{"version":3,"sources":["../server/text-to-speach-example.js"],"names":["textToSpeech","require","fs","util","client","TextToSpeechClient","quickStart","text","request","input","voice","languageCode","ssmlGender","audioConfig","audioEncoding","synthesizeSpeech","response","writeFile","promisify","audioContent","console","log"],"mappings":";;;;AAAA;AACA,IAAMA,eAAeC,QAAQ,8BAAR,CAArB;;AAEA;AACA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACA;AACA,IAAMG,SAAS,IAAIJ,aAAaK,kBAAjB,EAAf;AACA,eAAeC,UAAf,GAA4B;;AAE1B;AACA,MAAMC,OAAO,eAAb;;AAEA;AACA,MAAMC,UAAU;AACdC,WAAO,EAACF,MAAMA,IAAP,EADO;AAEd;AACAG,WAAO,EAACC,cAAc,OAAf,EAAwBC,YAAY,SAApC,EAHO;AAId;AACAC,iBAAa,EAACC,eAAe,KAAhB;AALC,GAAhB;;AAQA;;AAd0B,aAeP,MAAMV,OAAOW,gBAAP,CAAwBP,OAAxB,CAfC;AAAA;AAAA,MAenBQ,QAfmB;AAgB1B;;;AACA,MAAMC,YAAYd,KAAKe,SAAL,CAAehB,GAAGe,SAAlB,CAAlB;AACA,QAAMA,UAAU,YAAV,EAAwBD,SAASG,YAAjC,EAA+C,QAA/C,CAAN;AACAC,UAAQC,GAAR,CAAY,2CAAZ;AACD;AACDf","file":"text-to-speach-example.js","sourcesContent":["// Imports the Google Cloud client library\r\nconst textToSpeech = require('@google-cloud/text-to-speech');\r\n \r\n// Import other required libraries\r\nconst fs = require('fs');\r\nconst util = require('util');\r\n// Creates a client\r\nconst client = new textToSpeech.TextToSpeechClient();\r\nasync function quickStart() {\r\n\r\n  // The text to synthesize\r\n  const text = 'hello, world!';\r\n\r\n  // Construct the request\r\n  const request = {\r\n    input: {text: text},\r\n    // Select the language and SSML voice gender (optional)\r\n    voice: {languageCode: 'en-US', ssmlGender: 'NEUTRAL'},\r\n    // select the type of audio encoding\r\n    audioConfig: {audioEncoding: 'MP3'},\r\n  };\r\n\r\n  // Performs the text-to-speech request\r\n  const [response] = await client.synthesizeSpeech(request);\r\n  // Write the binary audio content to a local file\r\n  const writeFile = util.promisify(fs.writeFile);\r\n  await writeFile('output.mp3', response.audioContent, 'binary');\r\n  console.log('Audio content written to file: output.mp3');\r\n}\r\nquickStart();"]}